A: code

import networkx as nx
import matplotlib.pyplot as plt

#create a directed graph
graph = nx.gnp_random_graph(25, 0.6, directed=True)

#create a fingre and axis
fig, ax = plt.subplotes()

#Draw the graph
nx.draw(graph, with_labels=True, font_color='red', font_size=10, node_color='yellow', ax=ax)

#plot the graph
print("The generated output graph looks like:")
plt.show()


B: code


#number of nodes for graph
count=graph.number_of_nodes()
print(list(graph.neighbors(1)))


C: code

rank_dict = {}
x = rd.randint(0,24)

for i in range(25):
    rank_dict[j] = 0

rank_dict[x] += 1

for i in range(500000):
    list_n = list(green.neighbors(x))
    if len(list_n) == 0:
        x = rd.randint(0,24)
        rank_dict[x] += 1
    else:
        x = rd.choice(list_n)
        rank_dict[x] += 1

print("Random walk score updated")


D: code

for j in range(25):
    rank_dict[j] /= 500000

rank_dict_sorted = sorted(rank_dict.items(), key=lambda v: (v[1], v[0]), reverse=True)

print("The order generated by our implementation algoritm is\n")
for i in rank_dict_sorted:
    print(i[0], end=" ")

pagerank_sorted = sorted(nx.pagerank(graph).items(), key=lambda v: (v[1], v[0]), reverse=True)

print("\n\nThe order generated by networkx library is\n")
for i in pagerank_sorted:
    print(i[0], end=" ")